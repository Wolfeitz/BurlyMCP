name: Test and Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"

    - name: Lint with flake8
      run: |
        flake8 src/burly_mcp/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/burly_mcp/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Format check with black
      run: |
        black --check src/burly_mcp/ tests/

    - name: Type check with mypy
      run: |
        mypy src/burly_mcp/

    - name: Security scan with bandit
      run: |
        bandit -r src/burly_mcp/ -f json -o bandit-report.json || echo "Bandit scan completed with issues"
        bandit -r src/burly_mcp/ || echo "Bandit found security issues"

    - name: Dependency vulnerability scan
      run: |
        pip-audit --format=json --output=pip-audit-report.json || echo "pip-audit completed with issues"
        pip-audit || echo "pip-audit found vulnerabilities"

    - name: Test with pytest
      run: |
        pytest tests/ --cov=burly_mcp --cov-report=xml --cov-report=html --cov-report=term-missing

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          pip-audit-report.json
        if-no-files-found: warn

  docker-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t burly-mcp:test .

    - name: Test Docker image
      run: |
        # Test that the image runs without errors
        docker run --rm burly-mcp:test --help || true

    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'burly-mcp:test'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always() && github.event_name == 'push'
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Upload Trivy scan results as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-security-scan
        path: 'trivy-results.sarif'
        if-no-files-found: warn